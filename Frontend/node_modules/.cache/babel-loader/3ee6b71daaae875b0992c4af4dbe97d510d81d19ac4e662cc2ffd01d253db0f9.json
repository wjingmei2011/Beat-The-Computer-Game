{"ast":null,"code":"var _jsxFileName = \"/Users/maywang/Coding Stuff/Mini computer game/With authentification/Frontend/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Auth from './auth.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // define the state variables\n\n  const [targetNumber, setTargetNumber] = useState(null);\n  const [userNumber, setUserNumber] = useState('');\n  const [computerNumber, setComputerNumber] = useState(null);\n  const [roundsLeft, setRoundsLeft] = useState(10);\n  const [wins, setWins] = useState(0);\n  const [losses, setLosses] = useState(0);\n  const [isGameOver, setGameOver] = useState(false);\n  const [result, setResult] = useState('');\n  const [finalResult, setFinalResult] = useState(0);\n  const navigate = useNavigate();\n\n  // first look up for the final result by username stored in local storage\n  const username = localStorage.getItem('username');\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n  const getFinalResult = async () => {\n    const response = await fetch(`${backendUrl}/game/getFinalResult`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setFinalResult(data.finalResult);\n    } else {\n      alert('Error during retrieving final result:', data.message);\n    }\n  };\n\n  // define the useEffect for the final result by retrieving it from the database\n  useEffect(() => {\n    if (username) {\n      getFinalResult();\n    }\n  }, [username]);\n\n  // define the event handler: \n  // 1. the computer determines a target number. the user picks a number between 0~10; and the computer generates a random integer in the same range; whoever is closer to that target number wins. \n  // 2. once a single result is determined, all numbers are scratched and back to initial setting.\n  // 3. the user tries 10 times and if total wins is > total losses, the user win. \n\n  const gameHandler = () => {\n    if (userNumber === '') {\n      return alert('Please enter a number!');\n    }\n    ;\n    const newTarget = Math.floor(Math.random() * 11);\n    setTargetNumber(newTarget);\n    const newCompNumber = Math.floor(Math.random() * 11);\n    setComputerNumber(newCompNumber);\n    const userGap = Math.abs(newTarget - userNumber);\n    const computerGap = Math.abs(newTarget - newCompNumber);\n    let resultMessage = `Your guess: ${userNumber} | Computer's guess: ${newCompNumber} | Target number: ${newTarget} -> `;\n    if (userGap === computerGap) {\n      resultMessage += \"It's a tie!\";\n    }\n    ;\n    if (userGap < computerGap) {\n      resultMessage += \"You win this round!\";\n      setWins(wins => wins + 1);\n    }\n    ;\n    if (userGap > computerGap) {\n      resultMessage += \"You lose this round!\";\n      setLosses(losses => losses + 1);\n    }\n    ;\n    setResult(resultMessage);\n    setRoundsLeft(roundsLeft => roundsLeft - 1);\n    if (roundsLeft - 1 === 0) {\n      setGameOver(true);\n    }\n  };\n  const resetGame = () => {\n    setRoundsLeft(10);\n    setWins(0);\n    setLosses(0);\n    setGameOver(false);\n    setComputerNumber(null);\n    setUserNumber('');\n    setTargetNumber(null);\n    setResult('');\n  };\n\n  // define the useEffect when the game is over\n\n  useEffect(() => {\n    if (isGameOver) {\n      alert('Game Over!');\n    }\n    if (wins > losses && isGameOver) {\n      setFinalResult(finalResult => finalResult + 1);\n    }\n  }, [isGameOver]);\n  const logOut = async () => {\n    // store the final result in the local storage, send it to the database and log out\n    const response = await fetch(`${backendUrl}/game/updateFinalResult`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        finalResult\n      })\n    });\n    if (response.ok) {\n      alert('Final result is saved. You are logged out.');\n    } else {\n      alert('Error during saving final result:', response.message);\n    }\n    localStorage.removeItem('username');\n    navigate.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Wanna try your luck today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pick a number between 0 - 10. The computer will also pick a number. Whoever is closer to the target wins! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), !isGameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userNumber,\n          min: \"0\",\n          max: \"10\",\n          onChange: e => setUserNumber(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: gameHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), targetNumber !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total wins: \", wins, \" | Total losses: \", losses, \" | Rounds Left: \", roundsLeft]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total wins: \", wins, \" | Total losses: \", losses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: wins > losses ? 'ðŸŽ‰CongratulationsðŸŽ‰' : 'ðŸ˜¢ Try Again Next Time!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"So far you've won \", finalResult, \" round(s) - keep crushing it! \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Try Again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logOut,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m4ZF6iAiBU59ZE6bKzLfL0HM47M=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Auth","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","targetNumber","setTargetNumber","userNumber","setUserNumber","computerNumber","setComputerNumber","roundsLeft","setRoundsLeft","wins","setWins","losses","setLosses","isGameOver","setGameOver","result","setResult","finalResult","setFinalResult","navigate","username","localStorage","getItem","backendUrl","process","env","REACT_APP_BACKEND_URL","getFinalResult","response","fetch","method","headers","data","json","ok","alert","message","gameHandler","newTarget","Math","floor","random","newCompNumber","userGap","abs","computerGap","resultMessage","resetGame","logOut","body","JSON","stringify","removeItem","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","min","max","onChange","e","Number","target","onClick","_c","$RefreshReg$"],"sources":["/Users/maywang/Coding Stuff/Mini computer game/With authentification/Frontend/src/app.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Auth from './auth.js';\nimport { useNavigate} from 'react-router-dom';\n\n\nexport default function App () {\n// define the state variables\n\nconst [targetNumber, setTargetNumber]=useState(null);\nconst [userNumber, setUserNumber]=useState('');\nconst [computerNumber, setComputerNumber]=useState(null);\nconst [roundsLeft, setRoundsLeft]=useState(10);\nconst [wins, setWins]=useState(0);\nconst [losses, setLosses]=useState(0);\nconst [isGameOver, setGameOver]=useState(false);\nconst [result, setResult]=useState('');\nconst [finalResult, setFinalResult]=useState(0);\nconst navigate = useNavigate();\n\n\n// first look up for the final result by username stored in local storage\nconst username = localStorage.getItem('username');\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\nconst getFinalResult = async () => {\n    const response = await fetch(`${backendUrl}/game/getFinalResult`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n    });\n    const data= await response.json();\n    if (response.ok) {\n        setFinalResult(data.finalResult);\n    } else {\n        alert('Error during retrieving final result:', data.message);\n    }\n};\n\n// define the useEffect for the final result by retrieving it from the database\nuseEffect(()=>{\n    if(username) {\n        getFinalResult();\n    }\n}, [username]);\n\n\n// define the event handler: \n// 1. the computer determines a target number. the user picks a number between 0~10; and the computer generates a random integer in the same range; whoever is closer to that target number wins. \n// 2. once a single result is determined, all numbers are scratched and back to initial setting.\n// 3. the user tries 10 times and if total wins is > total losses, the user win. \n\nconst gameHandler = () => {\n    if (userNumber ===''){return alert ('Please enter a number!')};\n\n    const newTarget = Math.floor(Math.random()*11);\n    setTargetNumber(newTarget); \n\n    const newCompNumber = Math.floor(Math.random()*11);\n    setComputerNumber(newCompNumber);\n\n    const userGap = Math.abs(newTarget - userNumber);\n    const computerGap = Math.abs(newTarget - newCompNumber);\n\n    let resultMessage = `Your guess: ${userNumber} | Computer's guess: ${newCompNumber} | Target number: ${newTarget} -> `\n\n    if (userGap === computerGap) {\n        resultMessage += \"It's a tie!\";\n    };\n\n    if (userGap < computerGap) {\n        resultMessage += \"You win this round!\"\n        setWins(wins => wins+1);\n    };\n\n    if (userGap > computerGap) {\n        resultMessage += \"You lose this round!\"\n        setLosses(losses => losses+1);\n    };\n\n    setResult(resultMessage);\n\n    setRoundsLeft(roundsLeft => roundsLeft-1); \n\n    if (roundsLeft-1 === 0) {\n        setGameOver(true);\n    }\n};\n\nconst resetGame=()=>{\n    setRoundsLeft(10);\n    setWins(0);\n    setLosses(0);\n    setGameOver(false);\n    setComputerNumber(null);\n    setUserNumber('');\n    setTargetNumber(null);\n    setResult('');\n};\n\n// define the useEffect when the game is over\n\nuseEffect(()=>{\n    if (isGameOver) {\n        alert('Game Over!');\n    }\n    if (wins > losses && isGameOver) {\n     setFinalResult(finalResult => finalResult+1);\n    }}, [isGameOver]);\n\nconst logOut= async ()=>{\n    // store the final result in the local storage, send it to the database and log out\n    const response = await fetch(`${backendUrl}/game/updateFinalResult`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, finalResult }),\n    });\n    if (response.ok) {\n        alert('Final result is saved. You are logged out.');\n    } else {\n        alert('Error during saving final result:', response.message);}\n    localStorage.removeItem('username');\n    navigate.push('/');\n};\n\nreturn (\n    <div className='container'>\n        <div className='game-section'>\n            <h2>Wanna try your luck today?</h2>\n            <p>Pick a number between 0 - 10. The computer will also pick a number. Whoever is closer to the target wins! </p>\n\n            {!isGameOver?(\n                <>\n                 <input \n                    type=\"number\"\n                    value={userNumber}\n                    min=\"0\"\n                    max=\"10\"\n                    onChange={(e)=>setUserNumber(Number(e.target.value))}\n                 />\n                    <button onClick={gameHandler}>Submit</button>\n                \n                {targetNumber !== null && (\n                    <p>{result}</p>\n                )}\n                <p>Total wins: {wins} | Total losses: {losses} | Rounds Left: {roundsLeft}</p>\n\n                </>\n            ):(\n                <div className=\"game-over\">\n                    <p>Total wins: {wins} | Total losses: {losses}</p>\n                    <p>{wins > losses? 'ðŸŽ‰CongratulationsðŸŽ‰':'ðŸ˜¢ Try Again Next Time!'}</p>\n                    <p>So far you've won {finalResult} round(s) - keep crushing it! </p>\n                    <button onClick={resetGame}>Try Again!</button>\n                    <button onClick={logOut}>Log Out</button>\n                </div>\n            )}\n        </div>\n    </div>\n        );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}