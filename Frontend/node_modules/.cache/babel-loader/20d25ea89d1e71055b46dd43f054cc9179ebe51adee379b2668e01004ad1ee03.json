{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function App(){console.log('App is running');// define the state variables\nconst[targetNumber,setTargetNumber]=useState(null);const[userNumber,setUserNumber]=useState('');const[computerNumber,setComputerNumber]=useState(null);const[roundsLeft,setRoundsLeft]=useState(10);const[wins,setWins]=useState(0);const[losses,setLosses]=useState(0);const[isGameOver,setGameOver]=useState(false);const[result,setResult]=useState('');const[finalResult,setFinalResult]=useState(0);const navigate=useNavigate();// first look up for the final result by username stored in local storage\nconst username=localStorage.getItem('username');const backendUrl=process.env.REACT_APP_BACKEND_URL;const getFinalResult=async()=>{const response=await fetch(`${backendUrl}/game/getFinalResult`,{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();if(response.ok){setFinalResult(data.finalResult);}else{alert('Error during retrieving final result:',data.message);}};// define the useEffect for the final result by retrieving it from the database\nuseEffect(()=>{if(username){getFinalResult();}},[username]);// define the event handler: \n// 1. the computer determines a target number. the user picks a number between 0~10; and the computer generates a random integer in the same range; whoever is closer to that target number wins. \n// 2. once a single result is determined, all numbers are scratched and back to initial setting.\n// 3. the user tries 10 times and if total wins is > total losses, the user win. \nconst gameHandler=()=>{if(userNumber===''){return alert('Please enter a number!');};const newTarget=Math.floor(Math.random()*11);setTargetNumber(newTarget);const newCompNumber=Math.floor(Math.random()*11);setComputerNumber(newCompNumber);const userGap=Math.abs(newTarget-userNumber);const computerGap=Math.abs(newTarget-newCompNumber);let resultMessage=`Your guess: ${userNumber} | Computer's guess: ${newCompNumber} | Target number: ${newTarget} -> `;if(userGap===computerGap){resultMessage+=\"It's a tie!\";}else if(userGap<computerGap){resultMessage+=\"You win this round!\";setWins(wins=>wins+1);}else{resultMessage+=\"You lose this round!\";setLosses(losses=>losses+1);};setResult(resultMessage);setRoundsLeft(roundsLeft=>roundsLeft-1);if(roundsLeft-1===0){setGameOver(true);}};const resetGame=()=>{setRoundsLeft(10);setWins(0);setLosses(0);setGameOver(false);setComputerNumber(null);setUserNumber('');setTargetNumber(null);setResult('');};// define the useEffect when the game is over\nuseEffect(()=>{if(isGameOver){alert('Game Over!');if(wins>losses){setFinalResult(finalResult=>finalResult+1);}}},[isGameOver,wins,losses]);const logOut=async()=>{// store the final result in the local storage, send it to the database and log out\nconst response=await fetch(`${backendUrl}/game/updateFinalResult`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,finalResult})});if(response.ok){alert('Final result is saved. You are logged out.');}else{alert('Error during saving final result:',response.message);}localStorage.removeItem('username');navigate('/');};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"game-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Wanna try your luck today?\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Pick a number between 0 - 10. The computer will also pick a number. Whoever is closer to the target wins! \"}),!isGameOver?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:userNumber,min:\"0\",max:\"10\",onChange:e=>setUserNumber(Number(e.target.value))}),/*#__PURE__*/_jsx(\"button\",{onClick:gameHandler,children:\"Submit\"}),targetNumber!==null&&/*#__PURE__*/_jsx(\"p\",{children:result}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total wins: \",wins,\" | Total losses: \",losses,\" | Rounds Left: \",roundsLeft]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"game-over\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Total wins: \",wins,\" | Total losses: \",losses]}),/*#__PURE__*/_jsx(\"p\",{children:wins>losses?'ðŸŽ‰CongratulationsðŸŽ‰':'ðŸ˜¢ Try Again Next Time!'}),/*#__PURE__*/_jsxs(\"p\",{children:[\"So far you've won \",finalResult,\" round(s) - keep crushing it! \"]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,children:\"Try Again!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:logOut,children:\"Log Out\"})]})]})});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","console","log","targetNumber","setTargetNumber","userNumber","setUserNumber","computerNumber","setComputerNumber","roundsLeft","setRoundsLeft","wins","setWins","losses","setLosses","isGameOver","setGameOver","result","setResult","finalResult","setFinalResult","navigate","username","localStorage","getItem","backendUrl","process","env","REACT_APP_BACKEND_URL","getFinalResult","response","fetch","method","headers","data","json","ok","alert","message","gameHandler","newTarget","Math","floor","random","newCompNumber","userGap","abs","computerGap","resultMessage","resetGame","logOut","body","JSON","stringify","removeItem","className","children","type","value","min","max","onChange","e","Number","target","onClick"],"sources":["/Users/maywang/Coding Stuff/Mini computer game/With authentification/Frontend/src/app.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useNavigate} from 'react-router-dom';\n\nexport default function App () {\n    console.log('App is running');\n// define the state variables\n\nconst [targetNumber, setTargetNumber]=useState(null);\nconst [userNumber, setUserNumber]=useState('');\nconst [computerNumber, setComputerNumber]=useState(null);\nconst [roundsLeft, setRoundsLeft]=useState(10);\nconst [wins, setWins]=useState(0);\nconst [losses, setLosses]=useState(0);\nconst [isGameOver, setGameOver]=useState(false);\nconst [result, setResult]=useState('');\nconst [finalResult, setFinalResult]=useState(0);\nconst navigate = useNavigate();\n\n\n// first look up for the final result by username stored in local storage\nconst username = localStorage.getItem('username');\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\nconst getFinalResult = async () => {\n    const response = await fetch(`${backendUrl}/game/getFinalResult`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n    });\n    const data= await response.json();\n    if (response.ok) {\n        setFinalResult(data.finalResult);\n    } else {\n        alert('Error during retrieving final result:', data.message);\n    }\n};\n\n// define the useEffect for the final result by retrieving it from the database\nuseEffect(()=>{\n    if(username) {\n        getFinalResult();\n    }\n}, [username]);\n\n\n// define the event handler: \n// 1. the computer determines a target number. the user picks a number between 0~10; and the computer generates a random integer in the same range; whoever is closer to that target number wins. \n// 2. once a single result is determined, all numbers are scratched and back to initial setting.\n// 3. the user tries 10 times and if total wins is > total losses, the user win. \n\nconst gameHandler = () => {\n    if (userNumber ==='')\n        {return alert ('Please enter a number!')};\n\n    const newTarget = Math.floor(Math.random()*11);\n    setTargetNumber(newTarget); \n\n    const newCompNumber = Math.floor(Math.random()*11);\n    setComputerNumber(newCompNumber);\n\n    const userGap = Math.abs(newTarget - userNumber);\n    const computerGap = Math.abs(newTarget - newCompNumber);\n\n    let resultMessage = `Your guess: ${userNumber} | Computer's guess: ${newCompNumber} | Target number: ${newTarget} -> `\n\n    if (userGap === computerGap) {\n        resultMessage += \"It's a tie!\";\n    } else if (userGap < computerGap) {\n        resultMessage += \"You win this round!\"\n        setWins(wins => wins+1);\n    } else {\n        resultMessage += \"You lose this round!\"\n        setLosses(losses => losses+1);\n    };\n\n    setResult(resultMessage);\n\n    setRoundsLeft(roundsLeft => roundsLeft-1); \n\n    if (roundsLeft-1 === 0) {\n        setGameOver(true);\n    }\n};\n\nconst resetGame=()=>{\n    setRoundsLeft(10);\n    setWins(0);\n    setLosses(0);\n    setGameOver(false);\n    setComputerNumber(null);\n    setUserNumber('');\n    setTargetNumber(null);\n    setResult('');\n};\n\n// define the useEffect when the game is over\n\nuseEffect(()=>{\n    if (isGameOver) {\n        alert('Game Over!');\n        if (wins > losses) {\n            setFinalResult(finalResult => finalResult+1);\n        }\n    }\n   }, [isGameOver, wins, losses]);\n\nconst logOut= async ()=>{\n    // store the final result in the local storage, send it to the database and log out\n    const response = await fetch(`${backendUrl}/game/updateFinalResult`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, finalResult }),\n    });\n    if (response.ok) {\n        alert('Final result is saved. You are logged out.');\n    } else {\n        alert('Error during saving final result:', response.message);}\n    localStorage.removeItem('username');\n    navigate('/');\n};\n\nreturn (\n    <div className='container'>\n        <div className='game-section'>\n            <h2>Wanna try your luck today?</h2>\n            <p>Pick a number between 0 - 10. The computer will also pick a number. Whoever is closer to the target wins! </p>\n\n            {!isGameOver?(\n                <>\n                 <input \n                    type=\"number\"\n                    value={userNumber}\n                    min=\"0\"\n                    max=\"10\"\n                    onChange={(e)=>setUserNumber(Number(e.target.value))}\n                 />\n                    <button onClick={gameHandler}>Submit</button>\n                \n                {targetNumber !== null && (\n                    <p>{result}</p>\n                )}\n                <p>Total wins: {wins} | Total losses: {losses} | Rounds Left: {roundsLeft}</p>\n\n                </>\n            ):(\n                <div className=\"game-over\">\n                    <p>Total wins: {wins} | Total losses: {losses}</p>\n                    <p>{wins > losses? 'ðŸŽ‰CongratulationsðŸŽ‰':'ðŸ˜¢ Try Again Next Time!'}</p>\n                    <p>So far you've won {finalResult} round(s) - keep crushing it! </p>\n                    <button onClick={resetGame}>Try Again!</button>\n                    <button onClick={logOut}>Log Out</button>\n                </div>\n            )}\n        </div>\n    </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}